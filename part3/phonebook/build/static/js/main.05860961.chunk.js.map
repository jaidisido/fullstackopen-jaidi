{"version":3,"sources":["components/Persons.js","services/persons.js","App.js","index.js"],"names":["Person","person","personDelete","name","number","onClick","Persons","persons","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","Notification","message","className","Filter","props","value","filteredName","onChange","handleFilteredChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newPhone","handlePhoneChange","type","App","useState","setPersons","setNewName","setNewPhone","setFilteredName","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","event","target","preventDefault","includes","window","alert","returnedPerson","concat","setTimeout","confirm","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05860961.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({persons, personDelete}) => persons.map(person =>\n    <Person\n        key={person.id}\n        person={person}\n        personDelete={() => personDelete(person.id)}\n    />\n)\n\nconst Person = ({ person, personDelete }) => {\n    return (\n        <>\n            {person.name} {person.number} \n            <button onClick={personDelete}>delete</button> <br/>\n        </>\n        )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, del}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"successful\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n    return(\n        <> \n            filter shown with: <input value={props.filteredName} onChange={props.handleFilteredChange}/>\n        </>\n    )\n}\n\nconst PersonForm = (props) => {\n    return (\n      <form onSubmit={props.addPerson}>\n        <div> name: <input value={props.newName} onChange={props.handleNameChange}/> </div>\n        <div> number: <input value={props.newPhone} onChange={props.handlePhoneChange}/> </div>\n        <div> <button type=\"submit\">add</button> </div>\n      </form>\n    )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ filteredName, setFilteredName ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map(person => person.name).includes(newName)) {\n        window.alert(`${newName} already exists in the phonebook`)\n    } else {\n        const newPerson = {\n            name: newName,\n            number: newPhone\n        }\n        personService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewPhone('')\n          setNotificationMessage(\n            `'${returnedPerson.name}' successfully added`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 2000)\n        })\n    }\n  }\n\n  const deletePerson = id => {\n    if(window.confirm(`Delete ${persons.filter(p => p.id === id)[0].name}?`)) {\n      personService.del(id)\n      .then(setPersons(persons.filter(p => p.id !== id)))\n    }\n  }\n\n  const personsToShow = (filteredName !== '')\n    ? persons.filter(person => person.name.toLowerCase() === filteredName.toLowerCase())\n    : persons\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilteredChange = (event) => {\n    setFilteredName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Filter filteredName={filteredName} handleFilteredChange={handleFilteredChange}/>\n      <h3>Add a new individual</h3>\n        <Notification message={notificationMessage} />\n        <PersonForm \n            newName={newName} handleNameChange={handleNameChange}\n            newPhone={newPhone} handlePhoneChange={handlePhoneChange}\n            addPerson={addPerson}\n        />\n      <h3>Numbers</h3>\n        <Persons persons={personsToShow} personDelete={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}